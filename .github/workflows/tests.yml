###############################################################################
# About GitHub Actions                                                        #
# https://docs.github.com/en/actions/learn-github-actions                     #
# https://www.youtube.com/watch?v=TLB5MY9BBa4                                 #
###############################################################################
#
# Run unit and functional tests and generate code coverage rate.
# PestPhp: https://pestphp.com/docs/installation
#
# Coverage rate is generated and exported to code analysis service 'Code
# Climate' only in ubuntu-latest environment and php version 8.1
#
# - About: https://codeclimate.com/
# - How to upload: https://docs.codeclimate.com/docs/github-actions-test-coverage

name: Unit and Feature tests

on: ['workflow_dispatch', 'push', 'pull_request']

concurrency:
  group: tests-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        php: [8.1]
        stability: [prefer-stable]

    name: P${{ matrix.php }} - ${{ matrix.stability }} - ${{ matrix.os }}

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup MySql
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE site_test;' -uroot -proot
          mysql -e 'SHOW DATABASES;' -uroot -proot
          mysql -V

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache/files
          key: dependencies-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: bcmath, ctype, curl, dom, fileinfo, filter, iconv, json, ldap, libxml, mbstring, openssl, pcre, pdo, pdo_mysql, phar, tokenizer, xml, xmlreader, xmlwriter
          tools: composer:v2
          coverage: xdebug

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      # Generate .env file based on .env.example
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install dependencies
        run: composer update --${{ matrix.stability }} --prefer-stable --no-interaction --no-progress

      # Generate the application key
      - name: Generate key
        run: php artisan key:generate

      # Grants full control on the application's cache folder
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Execute tests
        run: |
          php --version
          ./vendor/bin/pest --coverage --colors=always --stop-on-failure --exclude-group=integration

      - name: Upload coverage to Code Climate
        uses: paambaati/codeclimate-action@v3.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.SCI_CC_TEST_REPORTER_ID }}
        with:
          debug: true
        if: github.event.action != 'pull_request'
